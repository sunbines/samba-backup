From 687aa646852d5fd5d4e811b2ec562ebffa15e23d Mon Sep 17 00:00:00 2001
From: Oyvind Albrigtsen <oalbrigt@redhat.com>
Date: Thu, 14 Jul 2022 14:52:07 +0200
Subject: [PATCH] ocf-tester: remove deprecated lrmd/lrmadmin code that hasnt
 worked since pre-pacemaker days

---
 tools/ocf-tester.8  | 12 ++-----
 tools/ocf-tester.in | 81 ---------------------------------------------
 2 files changed, 2 insertions(+), 91 deletions(-)

diff --git a/tools/ocf-tester.8 b/tools/ocf-tester.8
index 850ec0be04..3f398282d2 100644
--- a/tools/ocf-tester.8
+++ b/tools/ocf-tester.8
@@ -1,9 +1,9 @@
-.TH OCF-TESTER "8" "January 2012" "Tool for testing if a cluster resource is OCF compliant" "System Administration Utilities"
+.TH OCF-TESTER "8" "July 2022" "Tool for testing if a cluster resource is OCF compliant" "System Administration Utilities"
 .SH NAME
 ocf-tester \- Part of the Linux-HA project
 .SH SYNOPSIS
 .B ocf-tester
-[\fI-LhvqdX\fR] \fI-n resource_name \fR[\fI-o name=value\fR]\fI* /full/path/to/resource/agent\fR
+[\fI-hvqdX\fR] \fI-n resource_name \fR[\fI-o name=value\fR]\fI* /full/path/to/resource/agent\fR
 .SH DESCRIPTION
 Tool for testing if a cluster resource is OCF compliant
 .SH OPTIONS
@@ -26,11 +26,6 @@ Name of the resource
 \fB\-o\fR name=value
 Name and value of any parameters required by the agent
 .TP
-\fB\-L\fR
-Use lrmadmin/lrmd for tests
-.PP
-Usage: ocf\-tester [\-Lh] \fB\-n\fR resource_name [\-o name=value]* /full/path/to/resource/agent
-.TP
 \fB\-h\fR
 This text
 .TP
@@ -51,6 +46,3 @@ Name of the resource
 .TP
 \fB\-o\fR name=value
 Name and value of any parameters required by the agent
-.TP
-\fB\-L\fR
-Use lrmadmin/lrmd for tests
diff --git a/tools/ocf-tester.in b/tools/ocf-tester.in
index 10822a5a06..15b14e51ea 100755
--- a/tools/ocf-tester.in
+++ b/tools/ocf-tester.in
@@ -25,8 +25,6 @@
 # Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
 #
 
-LRMD=@libdir@/heartbeat/lrmd
-LRMADMIN=@sbindir@/lrmadmin
 DATADIR=@datadir@
 METADATA_LINT="xmllint --noout --valid -"
 
@@ -61,7 +59,6 @@ usage() {
     echo "  -X       		Turn on RA tracing (expect large output)"
     echo "  -n name		Name of the resource"	
     echo "  -o name=value		Name and value of any parameters required by the agent"
-    echo "  -L			Use lrmadmin/lrmd for tests"
     exit $1
 }
 
@@ -104,7 +101,6 @@ while test "$done" = "0"; do
 	-o) name=${2%%=*}; value=${2#*=}; 
 		lrm_ra_args="$lrm_ra_args $2";
 		ra_args="$ra_args OCF_RESKEY_$name='$value'"; shift; shift;;
-	-L) use_lrmd=1; shift;;
 	-v) verbose=1; shift;;
 	-d) export HA_debug=1; shift;;
 	-X) export OCF_TRACE_RA=1; verbose=1; shift;;
@@ -140,79 +136,6 @@ stopped_rc=7
 has_demote=1
 has_promote=1
 
-start_lrmd() {
-	lrmd_timeout=0
-	lrmd_interval=0
-	lrmd_target_rc=EVERYTIME
-	lrmd_started=""
-	$LRMD -s 2>/dev/null
-	rc=$?
-	if [ $rc -eq 3 ]; then
-		lrmd_started=1
-		$LRMD &
-		sleep 1
-		$LRMD -s 2>/dev/null
-	else
-		return $rc
-	fi
-}
-add_resource() {
-	$LRMADMIN -A $OCF_RESOURCE_INSTANCE \
-		ocf \
-		`basename $agent` \
-		$(basename `dirname $agent`) \
-		$lrm_ra_args > /dev/null
-}
-del_resource() {
-	$LRMADMIN -D $OCF_RESOURCE_INSTANCE
-}
-parse_lrmadmin_output() {
-	awk '
-BEGIN{ rc=1; }
-/Waiting for lrmd to callback.../ { n=1; next; }
-n==1 && /----------------operation--------------/ { n++; next; }
-n==2 && /return code:/ { rc=$0; sub("return code: *","",rc); next }
-n==2 && /---------------------------------------/ {
-        n++;
-        next;
-}
-END{
-	if( n!=3 ) exit 1;
-	else exit rc;
-}
-'
-}
-exec_resource() {
-	op="$1"
-	args="$2"
-	$LRMADMIN -E $OCF_RESOURCE_INSTANCE \
-		$op $lrmd_timeout $lrmd_interval \
-		$lrmd_target_rc \
-		$args | parse_lrmadmin_output
-}
-
-if [ "$use_lrmd" = 1 ]; then
-	echo "Using lrmd/lrmadmin for all tests"
-	start_lrmd || {
-		echo "could not start lrmd" >&2
-		exit 1
-	}
-	trap '
-		[ "$lrmd_started" = 1 ] && $LRMD -k
-	' EXIT
-	add_resource || {
-		echo "failed to add resource to lrmd" >&2
-		exit 1
-	}
-fi
-
-lrm_test_command() {
-	action="$1"
-	msg="$2"
-	debug "$msg"
-	exec_resource $action "$lrm_ra_args"
-}
-
 test_permissions() {
     action=meta-data
     debug ${1:-"Testing permissions with uid nobody"}
@@ -233,10 +156,6 @@ test_command() {
     action=$1; shift
     export __OCF_ACTION=$action
     msg=${1:-"Testing: $action"}
-    if [ "$use_lrmd" = 1 ]; then
-    	lrm_test_command $action "$msg"
-    	return $?
-    fi
     #echo Running: "export $ra_args; $agent $action 2>&1 > /dev/null"
     if [ $verbose -eq 0 ]; then
 	command_output=`$agent $action 2>&1`
